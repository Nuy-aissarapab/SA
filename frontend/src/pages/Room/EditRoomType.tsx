import { useEffect, useState } from "react";
import {
  Button,
  Col,
  Form,
  Input,
  InputNumber,
  Row,
  Select,
  Spin,
  message,
  Modal,
} from "antd";
import { ArrowLeftOutlined, ExclamationCircleOutlined } from "@ant-design/icons";
import { useNavigate } from "react-router-dom";
import { GetAllRoomTypes, UpdateRoomType, DeleteRoomType } from "../../Service/https/index";

const { Option } = Select;

function EditRoomType() {
  const navigate = useNavigate();
  const [form] = Form.useForm();
  const [loading, setLoading] = useState(false);
  const [initialLoading, setInitialLoading] = useState(true);
  const [roomTypes, setRoomTypes] = useState<any[]>([]);
  const [selectedId, setSelectedId] = useState<number | null>(null);

  const [messageApi, contextHolder] = message.useMessage();
  const [modal, modalContextHolder] = Modal.useModal();

  // ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  useEffect(() => {
    const fetchTypes = async () => {
      setInitialLoading(true);
      const res = await GetAllRoomTypes();
      if (Array.isArray(res)) {
        setRoomTypes(res);
      } else {
        messageApi.error("‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      }
      setInitialLoading(false);
    };
    fetchTypes();
  }, []);

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
  const handleSelect = (id: number) => {
    const selected = roomTypes.find((rt) => rt.ID === id);
    if (selected) {
      setSelectedId(id);
      form.setFieldsValue({
        roomTypeId: selected.ID,
        name: selected.RoomTypeName,
        price: selected.RentalPrice,
      });
    }
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
  const onFinish = async (values: any) => {
    if (!selectedId) {
      return messageApi.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç");
    }
    try {
      setLoading(true);
      const payload = {
        RoomTypeName: values.name,
        RentalPrice: Number(values.price),
      };

      const res = await UpdateRoomType(selectedId, payload);
      if (res?.status === 200) {
        messageApi.success("‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
        navigate("/Room");
      } else {
        messageApi.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + (res?.data?.error || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏"));
      }
    } catch {
      messageApi.error("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    } finally {
      setLoading(false);
    }
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö
  const handleDelete = () => {
    if (!selectedId) {
      return messageApi.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö");
    }

    modal.confirm({
      title: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö",
      icon: <ExclamationCircleOutlined />,
      content: "‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ?",
      okText: "‡∏•‡∏ö",
      okType: "danger",
      cancelText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
      onOk: async () => {
        try {
          const res = await DeleteRoomType(selectedId);
          console.log("üî• Delete response:", res);

          if (res && res.status === 200) {
            messageApi.success(res.data?.message || "‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
            navigate("/Room");
          } else {
            messageApi.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + (res?.data?.error || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏"));
          }
        } catch (err) {
          console.error("üî• Delete error:", err);
          messageApi.error("‡∏•‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
        }
      },
    });
  };

  return (
    <>
      {contextHolder}
      {modalContextHolder}

      <Row justify="start">
        <Col>
          <Button
            type="default"
            icon={<ArrowLeftOutlined />}
            onClick={() => navigate("/Room")}
            style={{ marginBottom: 16, borderRadius: 6 }}
          >
            ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
          </Button>
        </Col>
      </Row>

      <Row justify="center">
        <Col span={16}>
          <h2>‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á</h2>
          {initialLoading ? (
            <Spin />
          ) : (
            <Form form={form} layout="vertical" onFinish={onFinish}>
              {/* Dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á */}
              <Form.Item
                label="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á"
                name="roomTypeId"
                rules={[{ required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á" }]}
                style={{ marginBottom: 20 }}
              >
                <Select
                  placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á"
                  onChange={(val) => handleSelect(Number(val))}
                >
                  {roomTypes.map((rt) => (
                    <Option key={rt.ID} value={rt.ID}>
                      {rt.RoomTypeName} (‡∏£‡∏≤‡∏Ñ‡∏≤ {rt.RentalPrice} ‡∏ö‡∏≤‡∏ó)
                    </Option>
                  ))}
                </Select>
              </Form.Item>

              <Form.Item
                label="‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á"
                name="name"
                rules={[{ required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á" }]}
              >
                <Input placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏î‡∏•‡∏°, ‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏≠‡∏£‡πå" />
              </Form.Item>

              <Form.Item
                label="‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏ä‡πà‡∏≤ (‡∏ö‡∏≤‡∏ó)"
                name="price"
                rules={[{ required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏ä‡πà‡∏≤" }]}
              >
                <InputNumber min={0} style={{ width: "100%" }} />
              </Form.Item>

              <Form.Item>
                <Row justify="space-between">
                  <Col>
                    <Button danger onClick={handleDelete}>
                      üóëÔ∏è ‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á
                    </Button>
                  </Col>
                  <Col>
                    <Button type="primary" htmlType="submit" loading={loading}>
                      ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                    </Button>
                  </Col>
                </Row>
              </Form.Item>
            </Form>
          )}
        </Col>
      </Row>
    </>
  );
}

export default EditRoomType;
